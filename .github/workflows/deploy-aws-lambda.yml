name: Deploy AWS lambda

on:
  workflow_dispatch:

jobs:
  lambda:
    runs-on: ubuntu-latest

    env:
      JAVASCRIPT_SRC_DIR: ./aws/lambda
      PACKAGE_DIR: ./aws/lambda/dist
      PACKAGE_NAME: github_webhook_lambda.zip
      TERRAFORM_DIR: aws/terraform

    outputs:
      api_gateway_endpoint: ${{ steps.deploy.outputs.api_gateway_endpoint }}
      api_gateway_stage_name: ${{ steps.deploy.outputs.api_gateway_stage_name }}

    steps:
      - uses: actions/checkout@v4

      - name: zip
        uses: montudor/action-zip@v1.0.0
        with:
          args: zip -qq -r ${{ env.PACKAGE_DIR  }}/${{ env.PACKAGE_NAME}} ${{ env.JAVASCRIPT_SRC_DIR }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0

      - name: Terraform apply
        id: deploy
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: | 
          terraform init -backend-config=backend.conf -reconfigure
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
          echo "api_gateway_endpoint=$(terraform output -raw api_gateway_endpoint)" >> "$GITHUB_OUTPUT"
          echo "api_gateway_stage_name=$(terraform output -raw api_gateway_stage_name)" >> "$GITHUB_OUTPUT"

  github:
    runs-on: ubuntu-latest
    needs: [lambda]

    env:
      GITHUB_TOKEN: ${{ secrets.ORG_GITHUB_TOKEN }}
      TERRAFORM_DIR: github/terraform

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0

      - name: Terraform apply
        id: deploy
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform init -backend-config=backend.conf -reconfigure
          terraform plan -var "webhook_url=${{ needs.lambda.outputs.api_gateway_endpoint }}/${{ needs.lambda.outputs.api_gateway_stage_name }}" -out=tfplan
          terraform apply -auto-approve tfplan

  summary:
    runs-on: ubuntu-latest
    needs: [lambda, github]
    
    steps:
      - name: Summary
        run: |
          echo "API Gateway Endpoint=${{ needs.lambda.outputs.api_gateway_endpoint }}" >> "$GITHUB_STEP_SUMMARY"
          echo "API Gateway Stage Name=${{ needs.lambda.outputs.api_gateway_stage_name }}" >> "$GITHUB_STEP_SUMMARY"